from fastapi import FastAPI
from fastapi_hypermodel import HyperModel
{% for resource in resources %}
import {{ resource.name|lower }}_router
{%  endfor %}
{% if caching_enabled -%}
import aioredis
from fastapi_cache import FastAPICache
from fastapi_cache.backends.redis import RedisBackend
{% endif %}

app = FastAPI()
{% for resource in resources %}
app.include_router({{ resource.name|lower }}_router.router)
{%  endfor %}

HyperModel.init_app(app)


{% if caching_enabled -%}
@app.on_event("startup")
async def startup():
    redis = aioredis.from_url("redis://redis", encoding="utf8", decode_responses=True)
    FastAPICache.init(RedisBackend(redis), prefix="fastapi-cache")
{% endif %}
