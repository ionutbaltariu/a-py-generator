from fastapi_hypermodel import HyperModel, LinkSet, HALFor
from pydantic import constr, BaseModel


{% for resource in resources -%}
class {{ resource.name }}(HyperModel):
    {% macro gen_fields() %}
        {% for field in resource.fields -%}
            {{ field.name|lower }}: {{ field.type }}
        {% endfor %}
    {% endmacro %}
    {{ gen_fields()|indent(width=4, first=False) }}
    links = LinkSet(
        {
            "self": HALFor("get_{{ resource.name|lower }}",
                          { {{resource.primary_key|lower|tojson}}: "<{{resource.primary_key|lower}}>"},
                          "Get the {{resource.name|lower}}"),
        }
    )

    class Config:
        orm_mode = True

{% endfor %}

class Error(BaseModel):
    error_code: int
    error_source: str
    error_reason: str